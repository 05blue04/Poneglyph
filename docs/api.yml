openapi: 3.0.3
info:
  title: Poneglyph API
  description: |
    A REST API for One Piece
    
    **Bounty Format**: Bounties are represented as human-readable strings:
    - `"100 berries"` for amounts under 1 million
    - `"1.5M berries"` for millions 
    - `"2.5B berries"` for billions
  version: 1.0.0
  contact:
    name: API Support
    url: https://github.com/05blue04/Poneglyph
paths:
  /characters:
    get:
      summary: List characters
      description: |
        Retrieve a paginated list of characters with optional filtering and sorting.
        Supports full-text search across character names and descriptions.
      tags:
        - Characters
      parameters:
        - name: search
          in: query
          description: Full-text search across character names and descriptions
          required: false
          schema:
            type: string
            example: "pirate king"
        - name: age
          in: query
          description: Filter by minimum age (0 means no age filter)
          required: false
          schema:
            type: integer
            minimum: 0
            example: 18
        - name: origin
          in: query
          description: Filter by character's origin location
          required: false
          schema:
            type: string
            example: "East Blue"
        - name: race
          in: query
          description: Filter by character race (case-insensitive)
          required: false
          schema:
            type: string
            enum: [human, fishman, merman, giant, dwarf, mink, lunarian, buccaneer, "long arm tribe", "long leg tribe", "snake neck tribe", "three-eye tribe", "snakeneck tribe", "longarm tribe", "longleg tribe", tontatta, kuja, skypiean, shandian, birkan, cyborg, zombie, "artificial human", reindeer, skeleton]
            example: "human"
        - name: bounty
          in: query
          description: Filter by minimum bounty amount (in raw berries, 0 means no bounty filter)
          required: false
          schema:
            type: integer
            minimum: 0
            example: 100000000
        - name: time_skip
          in: query
          description: Filter by time skip period (case-insensitive)
          required: false
          schema:
            type: string
            enum: [pre, post]
            example: "post"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of characters per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
        - name: sort
          in: query
          description: Sort field and direction
          required: false
          schema:
            type: string
            enum: [id, name, age, bounty, race, -id, -name, -age, -bounty, -race]
            default: "id"
            example: "-bounty"
      responses:
        '200':
          description: Successfully retrieved characters
          content:
            application/json:
              schema:
                type: object
                properties:
                  characters:
                    type: array
                    items:
                      $ref: '#/components/schemas/Character'
                  metadata:
                    $ref: '#/components/schemas/Metadata'
              example:
                characters:
                  - id: 1
                    name: "Monkey D. Luffy"
                    age: 19
                    description: "Captain of the Straw Hat Pirates and aspiring Pirate King"
                    origin: "East Blue"
                    bounty: "3B berries"
                    race: "human"
                    episode: 1
                    time_skip: "post"
                  - id: 2
                    name: "Roronoa Zoro"
                    age: 21
                    description: "First mate and swordsman of the Straw Hat Pirates"
                    origin: "East Blue"
                    bounty: "1.11B berries"
                    race: "human"
                    episode: 2
                    time_skip: "post"
                metadata:
                  current_page: 1
                  page_size: 20
                  first_page: 1
                  last_page: 5
                  total_records: 100
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      summary: Create a new character
      description: Add a new character to the database
      tags:
        - Characters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCharacterRequest'
            example:
              name: "Monkey D. Luffy"
              age: 17
              description: "A young pirate with rubber powers who dreams of becoming the Pirate King"
              origin: "Foosha Village, East Blue"
              bounty: "30M berries"
              race: "human"
              episode: 1
              time_skip: "pre"
      responses:
        '201':
          description: Character created successfully
          headers:
            Location:
              description: URL of the created character
              schema:
                type: string
                example: "/v1/characters/123"
          content:
            application/json:
              schema:
                type: object
                properties:
                  character:
                    $ref: '#/components/schemas/Character'
              example:
                character:
                  id: 123
                  name: "Monkey D. Luffy"
                  age: 17
                  description: "A young pirate with rubber powers who dreams of becoming the Pirate King"
                  origin: "Foosha Village, East Blue"
                  bounty: "30M berries"
                  race: "human"
                  episode: 1
                  time_skip: "pre"
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /characters/{id}:
    get:
      summary: Get character by ID
      description: Retrieve a specific character by their ID
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: Character ID
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 123
      responses:
        '200':
          description: Character found
          headers:
            Location:
              description: URL of the character
              schema:
                type: string
                example: "/v1/characters/123"
          content:
            application/json:
              schema:
                type: object
                properties:
                  character:
                    $ref: '#/components/schemas/Character'
              example:
                character:
                  id: 123
                  name: "Monkey D. Luffy"
                  age: 19
                  description: "Captain of the Straw Hat Pirates with rubber powers"
                  origin: "Foosha Village, East Blue"
                  bounty: "3B berries"
                  race: "human"
                  episode: 1
                  time_skip: "post"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      summary: Update character
      description: |
        Update an existing character. All fields are optional - only provided 
        fields will be updated. Partial updates are supported.
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: Character ID
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCharacterRequest'
            example:
              age: 19
              bounty: "3B berries"
              time_skip: "post"
      responses:
        '200':
          description: Character updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  character:
                    $ref: '#/components/schemas/Character'
              example:
                character:
                  id: 123
                  name: "Monkey D. Luffy"
                  age: 19
                  description: "Captain of the Straw Hat Pirates with rubber powers"
                  origin: "Foosha Village, East Blue"
                  bounty: "3B berries"
                  race: "human"
                  episode: 1
                  time_skip: "post"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete character
      description: Delete a character from the database
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: Character ID
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 123
      responses:
        '200':
          description: Character deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "character successfully deleted"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Character:
      type: object
      required:
        - id
        - name
        - age
        - description
        - origin
        - race
        - episode
        - time_skip
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the character
          example: 123
        name:
          type: string
          maxLength: 300
          description: Character's full name
          example: "Monkey D. Luffy"
        age:
          type: integer
          minimum: 1
          description: Character's age in years
          example: 19
        description:
          type: string
          minLength: 10
          maxLength: 2000
          description: Character description and background
          example: "Captain of the Straw Hat Pirates with rubber powers who dreams of becoming the Pirate King"
        origin:
          type: string
          maxLength: 200
          description: Character's place of origin
          example: "Foosha Village, East Blue"
        bounty:
          type: string
          description: |
            Character's bounty in berries. Format examples:
            - "100 berries" (under 1 million)
            - "1.5M berries" (millions)
            - "2.5B berries" (billions)
            - null for characters without bounties
          nullable: true
          example: "3B berries"
        race:
          type: string
          description: Character's race or species
          enum: [human, fishman, merman, giant, dwarf, mink, lunarian, buccaneer, "long arm tribe", "long leg tribe", "snake neck tribe", "three-eye tribe", "snakeneck tribe", "longarm tribe", "longleg tribe", tontatta, kuja, skypiean, shandian, birkan, cyborg, zombie, "artificial human", reindeer, skeleton]
          example: "human"
        episode:
          type: integer
          minimum: 1
          maximum: 1200
          description: Episode number where character first appeared
          example: 1
        time_skip:
          type: string
          enum: [pre, post]
          description: Whether character data is from pre or post time-skip
          example: "post"

    CreateCharacterRequest:
      type: object
      required:
        - name
        - age
        - description
        - origin
        - race
        - episode
        - time_skip
      properties:
        name:
          type: string
          maxLength: 300
          description: Character's full name
          example: "Monkey D. Luffy"
        age:
          type: integer
          minimum: 1
          description: Character's age in years
          example: 17
        description:
          type: string
          minLength: 10
          maxLength: 2000
          description: Character description and background
          example: "A young pirate with rubber powers who dreams of becoming the Pirate King"
        origin:
          type: string
          maxLength: 200
          description: Character's place of origin
          example: "Foosha Village, East Blue"
        bounty:
          type: string
          description: |
            Character's bounty in berries (optional). Format examples:
            - "100 berries" (under 1 million)
            - "1.5M berries" (millions)
            - "2.5B berries" (billions)
          nullable: true
          example: "30M berries"
        race:
          type: string
          description: Character's race or species (case will be normalized to lowercase)
          enum: [human, fishman, merman, giant, dwarf, mink, lunarian, buccaneer, "long arm tribe", "long leg tribe", "snake neck tribe", "three-eye tribe", "snakeneck tribe", "longarm tribe", "longleg tribe", tontatta, kuja, skypiean, shandian, birkan, cyborg, zombie, "artificial human", reindeer, skeleton]
          example: "Human"
        episode:
          type: integer
          minimum: 1
          maximum: 1200
          description: Episode number where character first appeared
          example: 1
        time_skip:
          type: string
          enum: [pre, post, Pre, Post]
          description: Whether character data is from pre or post time-skip (case will be normalized to lowercase)
          example: "Pre"

    UpdateCharacterRequest:
      type: object
      description: All fields are optional for partial updates
      properties:
        name:
          type: string
          maxLength: 300
          description: Character's full name
          example: "Monkey D. Luffy"
        age:
          type: integer
          minimum: 1
          description: Character's age in years
          example: 19
        description:
          type: string
          minLength: 10
          maxLength: 2000
          description: Character description and background
          example: "Captain of the Straw Hat Pirates with rubber powers"
        origin:
          type: string
          maxLength: 200
          description: Character's place of origin
          example: "Foosha Village, East Blue"
        bounty:
          type: string
          description: |
            Character's bounty in berries. Format examples:
            - "100 berries" (under 1 million)
            - "1.5M berries" (millions)
            - "2.5B berries" (billions)
          nullable: true
          example: "3B berries"
        race:
          type: string
          description: Character's race or species (case will be normalized to lowercase)
          enum: [human, fishman, merman, giant, dwarf, mink, lunarian, buccaneer, "long arm tribe", "long leg tribe", "snake neck tribe", "three-eye tribe", "snakeneck tribe", "longarm tribe", "longleg tribe", tontatta, kuja, skypiean, shandian, birkan, cyborg, zombie, "artificial human", reindeer, skeleton]
          example: "human"
        episode:
          type: integer
          minimum: 1
          maximum: 1200
          description: Episode number where character first appeared
          example: 1
        time_skip:
          type: string
          enum: [pre, post, Pre, Post]
          description: Whether character data is from pre or post time-skip (case will be normalized to lowercase)
          example: "post"

    Metadata:
      type: object
      description: Pagination metadata
      properties:
        current_page:
          type: integer
          description: Current page number
          example: 1
        page_size:
          type: integer
          description: Number of items per page
          example: 20
        first_page:
          type: integer
          description: First page number (always 1)
          example: 1
        last_page:
          type: integer
          description: Last page number
          example: 5
        total_records:
          type: integer
          description: Total number of records matching the query
          example: 100

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "the requested resource could not be found"

    ValidationError:
      type: object
      properties:
        error:
          type: object
          additionalProperties:
            type: string
          description: Validation errors keyed by field name
          example:
            name: "must be provided"
            age: "must be a positive integer"
            race: "must be a valid One Piece race"

  responses:
    BadRequest:
      description: Bad request - invalid JSON or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "invalid JSON format"

    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "the requested resource could not be found"

    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
          example:
            error:
              name: "must be provided"
              age: "must be a positive integer"
              bounty: "must not be negative"
              race: "must be a valid One Piece race"
              time_skip: "must be either pre or post"

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal server error"

tags:
  - name: Characters
    description: Operations for managing One Piece characters